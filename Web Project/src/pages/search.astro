---
import PokeAPI from '../components/PokeAPI.astro';
import Loader from '../components/Loader.astro';

// Estado inicial
let pokemonId = 0;
let errorMessage = '';
let isLoading = true;

// Obtener y validar el término de búsqueda
const searchParam = Astro.url.searchParams.get('pokemon');
const searchQuery = searchParam ? searchParam.toLowerCase().trim() : '';

// Realizar la búsqueda
if (searchQuery) {
    try {
        const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${searchQuery}`);
        const data = await response.json();
        pokemonId = data.id;
    } catch {
        errorMessage = 'No se encontró ningún Pokémon con ese nombre';
    }
} else {
    errorMessage = 'Por favor, ingresa un nombre de Pokémon para buscar';
}

isLoading = false;
---

<html lang="es">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <title>Buscar Pokémon - {searchQuery}</title>
    <link href="https://fonts.googleapis.com/css2?family=Press+Start+2P&family=Open+Sans:wght@400;700&display=swap" rel="stylesheet">
</head>
<body>
    <main>
        <h1>Resultado de búsqueda</h1>
        
        <div class="search-header">
            <a href="/" class="back-button">← Volver al listado</a>
            <p class="search-term">Buscando: <strong>{searchQuery}</strong></p>
        </div>

        {isLoading ? (
            <div class="loader-container">
                <Loader isLoading={true} />
            </div>
        ) : pokemonId > 0 ? (
            <div class="pokemon-card">
                <PokeAPI pokemonId={pokemonId} />
            </div>
        ) : (
            <div class="error-message">
                <h2>¡Ups!</h2>
                <p>{errorMessage}</p>
                <img 
                    src="https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/54.png" 
                    alt="Psyduck confundido" 
                    class="error-image"
                />
                <a href="/" class="back-link">Volver al inicio</a>
            </div>
        )}
    </main>
</body>
</html>

<style>
    body {
        font-family: 'Open Sans', sans-serif;
        background: linear-gradient(135deg, #2ecc71, #27ae60);
        background-color: #2ecc71;
        margin: 0;
        padding: 20px;
        position: relative;
        min-height: 100vh;
        overflow-x: hidden;
    }

    body::before {
        content: '';
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-image: 
            url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100' viewBox='0 0 100 100'%3E%3Cpath fill='%2327ae60' d='M30,50 C30,30 50,30 50,50 C50,70 70,70 70,50'/%3E%3C/svg%3E"),
            url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='60' height='60' viewBox='0 0 60 60'%3E%3Ccircle fill='%2327ae60' cx='30' cy='30' r='10'/%3E%3C/svg%3E");
        background-size: 100px 100px, 60px 60px;
        opacity: 0.1;
        z-index: -1;
        animation: sway 20s infinite linear;
    }

    @keyframes sway {
        0% {
            background-position: 0 0, 30px 30px;
        }
        100% {
            background-position: 100px 100px, 90px 90px;
        }
    }

    main {
        max-width: 500px;
        margin: 0 auto;
    }

    h1 {
        font-family: 'Press Start 2P', cursive;
        text-align: center;
        color: #2c3e50;
        margin-bottom: 2rem;
        font-size: 1.8rem;
    }

    .search-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 2rem;
        padding: 1rem;
        background-color: white;
        border-radius: 0.5rem;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    @media (max-width: 768px) {
        body {
            padding: 10px;
        }

        h1 {
            font-size: 1.2rem;
            margin-bottom: 1.5rem;
        }

        .search-header {
            flex-direction: column;
            gap: 1rem;
            text-align: center;
            padding: 0.8rem;
        }

        .pokemon-card {
            padding: 1rem;
        }

        .error-message {
            padding: 1rem;
        }

        .error-image {
            width: 120px;
            height: 120px;
        }
    }

    @media (max-width: 480px) {
        main {
            padding: 0 0.5rem;
        }

        .search-header {
            margin-bottom: 1rem;
        }

        .back-button, .back-link {
            padding: 0.4rem 1rem;
            font-size: 0.9rem;
        }
    }

    .back-button {
        color: #3498db;
        text-decoration: none;
        font-weight: 500;
        transition: color 0.2s;
    }

    .back-button:hover {
        color: #2980b9;
    }

    .search-term {
        margin: 0;
        color: #666;
    }

    .search-term strong {
        color: #2c3e50;
    }

    .loader-container {
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 300px;
    }

    .pokemon-card {
        background: white;
        padding: 0.8rem;
        border-radius: 0.8rem;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        max-width: 180px;
        margin: 0 auto;
        animation: fadeIn 0.3s ease-in;
    }

    .error-message {
        text-align: center;
        background: white;
        padding: 2rem;
        border-radius: 1rem;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        max-width: 400px;
        margin: 2rem auto;
        animation: fadeIn 0.3s ease-in;
    }

    .error-image {
        width: 150px;
        height: 150px;
        margin: 1rem 0;
        animation: bounce 2s infinite;
    }

    .back-link {
        display: inline-block;
        margin-top: 1rem;
        padding: 0.5rem 1.5rem;
        background-color: #3498db;
        color: white;
        text-decoration: none;
        border-radius: 0.5rem;
        transition: background-color 0.2s;
    }

    .back-link:hover {
        background-color: #2980b9;
    }

    @keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(10px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @keyframes bounce {
        0%, 100% {
            transform: translateY(0);
        }
        50% {
            transform: translateY(-10px);
        }
    }
</style>
